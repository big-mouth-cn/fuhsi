<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
	<bean name="sessionMemcachedClient"
		class="net.rubyeye.xmemcached.utils.XMemcachedClientFactoryBean">
		<!-- nio connection pool size -->
		<property name="connectionPoolSize" value="${session.memcached.pool.size}"></property>
		<!-- Use binary protocol,default is TextCommandFactory -->
		<property name="commandFactory">
			<bean class="net.rubyeye.xmemcached.command.BinaryCommandFactory"></bean>
		</property>
		<!-- Distributed strategy -->
		<property name="sessionLocator">
			<bean class="net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator"></bean>
		</property>
		<!-- Serializing transcoder -->
		<property name="transcoder">
			<bean class="net.rubyeye.xmemcached.transcoders.SerializingTranscoder" />
		</property>
		<!-- ByteBuffer allocator -->
		<property name="bufferAllocator">
			<bean class="net.rubyeye.xmemcached.buffer.SimpleBufferAllocator"></bean>
		</property>
		<!-- 
		<property name="configuration">
			<bean class="com.google.code.yanf4j.config.Configuration">
				<property name="soTimeout" value="${memcached.cfg.soTimeout}" />
				<property name="sessionReadBufferSize" value="${memcached.cfg.sessionReadBufferSize}" />
				<property name="readThreadCount" value="${memcached.cfg.readThreadCount}" />
				<property name="sessionIdleTimeout" value="${memcached.cfg.sessionIdleTimeout}" />
				<property name="writeThreadCount" value="${memcached.cfg.writeThreadCount}" />
			</bean>
		</property>
		 -->
		<property name="addShutdownHook" value="false" />
	</bean>
	<bean id="sessionNodeBuilder" class="org.bigmouth.nvwa.cache.support.ConfigNodeBuilder">
		<constructor-arg value="${session.memcached.servers}" />
	</bean>
	<bean id="sessionMemClientBuilder" class="org.bigmouth.nvwa.cache.xmc.XmcMemClientBuilder">
		<property name="nodeBuilder" ref="sessionNodeBuilder" />
		<property name="memcachedClient" ref="sessionMemcachedClient" />
	</bean>
	<bean id="sessionMemClient" class="net.rubyeye.xmemcached.MemcachedClient"
		factory-bean="sessionMemClientBuilder" factory-method="build" destroy-method="destroy">
		<property name="opTimeout" value="${session.memcached.cfg.soTimeout}" />
	</bean>
	<bean id="sessionHolder" class="org.bigmouth.nvwa.session.xmc.SimpleXmcSessionHolder" >
		<constructor-arg ref="sessionMemClient" />
		<constructor-arg value="${session.expire}" />
	</bean>
</beans>